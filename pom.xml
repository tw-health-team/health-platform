<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 基本信息 -->
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <name>health</name>
    <description>health management project</description>

    <!-- 项目说明：这里作为聚合工程的父工程 -->
    <groupId>com.theus</groupId>
    <artifactId>health</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <!-- 继承说明：这里继承Spring Boot提供的父工程 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 模块说明：这里声明多个子模块 -->
    <modules>
        <module>core</module>
        <module>health-base</module>
        <module>health-common</module>
        <module>health-main</module>
    </modules>
<!-- dddd-->
    <!-- 属性说明 -->
    <properties>
        <java.version>1.8</java.version>
        <health.version>0.0.1-SNAPSHOT</health.version>
        <swagger.version>2.8.0</swagger.version>
    </properties>

    <dependencies>
        <!-- LOMBOK -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.6</version>
            <scope>provided</scope>
        </dependency>
        <!-- mybatis -->
        <!--<dependency>-->
            <!--<groupId>org.mybatis.spring.boot</groupId>-->
            <!--<artifactId>mybatis-spring-boot-starter</artifactId>-->
        <!--</dependency>-->
        <!-- Mybatis Plus-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.1.2</version>
        </dependency>
        <!-- WEB -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- spring-boot-starter-web依赖包包含内嵌的 Tomcat 容器，所以直接部署在外部 Tomcat 会冲突报错 -->
        <!-- 重定义 spring-boot-starter-tomcat 依赖包的「 scope 」即可解决该问题 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--JWT-->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.4.0</version>
        </dependency>
        <!--shiro-->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.4.0</version>
        </dependency>
        <!-- mysql -->
        <!--<dependency>-->
            <!--<groupId>mysql</groupId>-->
            <!--<artifactId>mysql-connector-java</artifactId>-->
        <!--</dependency>-->
        <!--for SqlServer-->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>4.0</version>
        </dependency>
        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        <!-- fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.58</version>
        </dependency>
        <!-- AOP -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--Spring Cache-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!--Jedis-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>
        <!--Shiro-Redis-->
        <dependency>
            <groupId>org.crazycake</groupId>
            <artifactId>shiro-redis</artifactId>
            <version>2.8.24</version>
        </dependency>
    </dependencies>

    <!-- 依赖管理：这里统一管理依赖的版本号 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.theus</groupId>
                <artifactId>core</artifactId>
                <version>${health.version}</version>
            </dependency>
            <dependency>
                <groupId>com.theus</groupId>
                <artifactId>health-common</artifactId>
                <version>${health.version}</version>
            </dependency>
            <dependency>
                <groupId>com.theus</groupId>
                <artifactId>health-base</artifactId>
                <version>${health.version}</version>
            </dependency>
            <dependency>
                <groupId>com.theus</groupId>
                <artifactId>health-main</artifactId>
                <version>${health.version}</version>
            </dependency>
            <!-- Swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 项目部署到私服配置 -->
    <distributionManagement> <!-- 远程部署管理信息 -->
        <repository> <!--部署项目产生的构件到远程仓库需要的信息 -->
            <id>maven-releases</id>
            <name>Nexus Release Repository</name>
            <url>http://192.168.0.240:8081/repository/maven-releases/</url>
        </repository>

        <snapshotRepository> <!-- 如果没有配置该元素，默认部署到repository元素配置的仓库 -->
            <id>maven-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://192.168.0.240:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
